"""
Django settings for base project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%90t4vylhqy_p!v((3*)_)c=ive*939gqw)t1m@%*v5qb0*nyi'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
    # List of installed apps in the project
    # The order of the apps in the list is important
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'rest_framework',
    'knox',
    'django.contrib.staticfiles',
    'corsheaders',                  # Synced CORS headers to the project (connects the frontend to the backend)
    'api',                          # Synced API app to the project  (A folder that contains the APIs for the full stack project)
    'django_email', 
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',                    # Synced CORS middleware to the project ase URL is not the same in the frontend and in the backend
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Approved list of domains that can make requests to the backend
# A whitelist of origins that are authiruzed ti make cross-site HTTP requests
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    'http://localhost:5173',             # Frontend URL (ViteReact)
    # Troubleshooting (because of the port number may change)
    
]
CSRF_TRUSTED_ORIGINS = ['http://localhost:5173']  # Added CSRF trusted origins

# Session settings
SESSION_COOKIE_SAMESITE = 'None'  # Set to 'None' if test from frontend, set to 'Lax' if test from backend
SESSION_COOKIE_SECURE = True # Set to True if test fromfrontend, set to False if test frombackend
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_AGE = 3600
SESSION_SAVE_EVERY_REQUEST = True  # Added to save session on each request

# CSRF settings to match session settings
CSRF_COOKIE_SAMESITE = 'None'  # Set to 'None' if test from frontend, set to 'Lax' if test from backend
CSRF_COOKIE_SECURE = True # Set to True if test fromfrontend, set to False if test frombackend
CSRF_COOKIE_HTTPONLY = False  # Allow JavaScript to read CSRF token


AUTH_USER_MODEL = 'api.CustomUser' # Custom User Model
AUTHENTICATION_BACKENDS = ["django.contrib.auth.backends.ModelBackend",] # Use this function to auth instead of the default one

ROOT_URLCONF = 'base.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'base.wsgi.application'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': ('knox.auth.TokenAuthentication',)
}


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Email Configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # For testing - emails print to console
EMAIL_HOST = 'smtp.gmail.com'  # Your SMTP server
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'eagleexchange03@gmail.com'  # Your email
EMAIL_HOST_PASSWORD = 'shpimnmzhrtewewd'  # App password (not regular password)
DEFAULT_FROM_EMAIL = 'eagleexchange03@gmail.com'  # Your email


REST_KNOX = {
    'TOKEN_TTL': timedelta(minutes=1),  # Set your desired expiration time
    'AUTO_REFRESH': False,  # Whether tokens should auto-refresh when near expiration
}